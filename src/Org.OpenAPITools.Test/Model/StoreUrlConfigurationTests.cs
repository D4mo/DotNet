/* 
 * Payment Gateway API Specification.
 *
 * The documentation here is designed to provide all of the technical guidance required to consume and integrate with our APIs for payment processing. To learn more about our APIs please visit https://docs.firstdata.com/org/gateway.
 *
 * The version of the OpenAPI document: 6.10.1.20200226.002
 * 
 * Generated by: https://github.com/openapitools/openapi-generator.git
 */


using Xunit;

using System;
using System.Linq;
using System.IO;
using System.Collections.Generic;
using Org.OpenAPITools.Api;
using Org.OpenAPITools.Model;
using Org.OpenAPITools.Client;
using System.Reflection;
using Newtonsoft.Json;

namespace Org.OpenAPITools.Test
{
    /// <summary>
    ///  Class for testing StoreUrlConfiguration
    /// </summary>
    /// <remarks>
    /// This file is automatically generated by OpenAPI Generator (https://openapi-generator.tech).
    /// Please update the test case below to test the model.
    /// </remarks>
    public class StoreUrlConfigurationTests : IDisposable
    {
        // TODO uncomment below to declare an instance variable for StoreUrlConfiguration
        //private StoreUrlConfiguration instance;

        public StoreUrlConfigurationTests()
        {
            // TODO uncomment below to create an instance of StoreUrlConfiguration
            //instance = new StoreUrlConfiguration();
        }

        public void Dispose()
        {
            // Cleanup when everything is done.
        }

        /// <summary>
        /// Test an instance of StoreUrlConfiguration
        /// </summary>
        [Fact]
        public void StoreUrlConfigurationInstanceTest()
        {
            // TODO uncomment below to test "IsInstanceOfType" StoreUrlConfiguration
            //Assert.IsInstanceOfType<StoreUrlConfiguration> (instance, "variable 'instance' is a StoreUrlConfiguration");
        }


        /// <summary>
        /// Test the property 'Id'
        /// </summary>
        [Fact]
        public void IdTest()
        {
            // TODO unit test for the property 'Id'
        }
        /// <summary>
        /// Test the property 'TransactionNotificationUrl'
        /// </summary>
        [Fact]
        public void TransactionNotificationUrlTest()
        {
            // TODO unit test for the property 'TransactionNotificationUrl'
        }
        /// <summary>
        /// Test the property 'RecurringTransactionNotificationUrl'
        /// </summary>
        [Fact]
        public void RecurringTransactionNotificationUrlTest()
        {
            // TODO unit test for the property 'RecurringTransactionNotificationUrl'
        }
        /// <summary>
        /// Test the property 'ResponseSuccessUrl'
        /// </summary>
        [Fact]
        public void ResponseSuccessUrlTest()
        {
            // TODO unit test for the property 'ResponseSuccessUrl'
        }
        /// <summary>
        /// Test the property 'ResponseFailureUrl'
        /// </summary>
        [Fact]
        public void ResponseFailureUrlTest()
        {
            // TODO unit test for the property 'ResponseFailureUrl'
        }
        /// <summary>
        /// Test the property 'SkipResultPageForSuccess'
        /// </summary>
        [Fact]
        public void SkipResultPageForSuccessTest()
        {
            // TODO unit test for the property 'SkipResultPageForSuccess'
        }
        /// <summary>
        /// Test the property 'SkipResultPageForFailure'
        /// </summary>
        [Fact]
        public void SkipResultPageForFailureTest()
        {
            // TODO unit test for the property 'SkipResultPageForFailure'
        }
        /// <summary>
        /// Test the property 'OverwriteUrlAllowed'
        /// </summary>
        [Fact]
        public void OverwriteUrlAllowedTest()
        {
            // TODO unit test for the property 'OverwriteUrlAllowed'
        }

    }

}
