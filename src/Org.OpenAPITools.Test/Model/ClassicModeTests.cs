/* 
 * Payment Gateway API Specification.
 *
 * The documentation here is designed to provide all of the technical guidance required to consume and integrate with our APIs for payment processing. To learn more about our APIs please visit https://docs.firstdata.com/org/gateway.
 *
 * The version of the OpenAPI document: 21.1.0.20210122.001
 * 
 * Generated by: https://github.com/openapitools/openapi-generator.git
 */


using Xunit;

using System;
using System.Linq;
using System.IO;
using System.Collections.Generic;
using Org.OpenAPITools.Api;
using Org.OpenAPITools.Model;
using Org.OpenAPITools.Client;
using System.Reflection;
using Newtonsoft.Json;

namespace Org.OpenAPITools.Test
{
    /// <summary>
    ///  Class for testing ClassicMode
    /// </summary>
    /// <remarks>
    /// This file is automatically generated by OpenAPI Generator (https://openapi-generator.tech).
    /// Please update the test case below to test the model.
    /// </remarks>
    public class ClassicModeTests : IDisposable
    {
        // TODO uncomment below to declare an instance variable for ClassicMode
        //private ClassicMode instance;

        public ClassicModeTests()
        {
            // TODO uncomment below to create an instance of ClassicMode
            //instance = new ClassicMode();
        }

        public void Dispose()
        {
            // Cleanup when everything is done.
        }

        /// <summary>
        /// Test an instance of ClassicMode
        /// </summary>
        [Fact]
        public void ClassicModeInstanceTest()
        {
            // TODO uncomment below to test "IsInstanceOfType" ClassicMode
            //Assert.IsInstanceOfType<ClassicMode> (instance, "variable 'instance' is a ClassicMode");
        }


        /// <summary>
        /// Test the property 'BackgroundColor'
        /// </summary>
        [Fact]
        public void BackgroundColorTest()
        {
            // TODO unit test for the property 'BackgroundColor'
        }
        /// <summary>
        /// Test the property 'Mobile'
        /// </summary>
        [Fact]
        public void MobileTest()
        {
            // TODO unit test for the property 'Mobile'
        }
        /// <summary>
        /// Test the property 'AmountTitle'
        /// </summary>
        [Fact]
        public void AmountTitleTest()
        {
            // TODO unit test for the property 'AmountTitle'
        }
        /// <summary>
        /// Test the property 'Superscription'
        /// </summary>
        [Fact]
        public void SuperscriptionTest()
        {
            // TODO unit test for the property 'Superscription'
        }
        /// <summary>
        /// Test the property 'IndividualText'
        /// </summary>
        [Fact]
        public void IndividualTextTest()
        {
            // TODO unit test for the property 'IndividualText'
        }
        /// <summary>
        /// Test the property 'Label'
        /// </summary>
        [Fact]
        public void LabelTest()
        {
            // TODO unit test for the property 'Label'
        }
        /// <summary>
        /// Test the property 'NormalText'
        /// </summary>
        [Fact]
        public void NormalTextTest()
        {
            // TODO unit test for the property 'NormalText'
        }
        /// <summary>
        /// Test the property 'Buttons'
        /// </summary>
        [Fact]
        public void ButtonsTest()
        {
            // TODO unit test for the property 'Buttons'
        }
        /// <summary>
        /// Test the property 'Anchor'
        /// </summary>
        [Fact]
        public void AnchorTest()
        {
            // TODO unit test for the property 'Anchor'
        }
        /// <summary>
        /// Test the property 'SystemMessages'
        /// </summary>
        [Fact]
        public void SystemMessagesTest()
        {
            // TODO unit test for the property 'SystemMessages'
        }

    }

}
